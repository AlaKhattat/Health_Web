{% extends 'HealthAdvisorBundle:Default:index.html.twig' %}
{% block head %}
    {{ parent() }}
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <style>
        #map {
            height: 500px;
            width: 100%;
        }
        .controls {
            margin-top: 10px;
            border: 1px solid transparent;
            border-radius: 2px 0 0 2px;
            box-sizing: border-box;
            -moz-box-sizing: border-box;
            height: 32px;
            outline: none;
            box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
        }

        #pac-input {
            background-color: #fff;
            font-family: Roboto;
            font-size: 15px;
            font-weight: 300;
            margin-left: 12px;
            padding: 0 11px 0 13px;
            text-overflow: ellipsis;
            width: 300px;
        }

        #pac-input:focus {
            border-color: #4d90fe;
        }

        .pac-container {
            font-family: Roboto;
        }

        #type-selector {
            color: #fff;
            background-color: #4d90fe;
            padding: 5px 11px 0px 11px;
        }

        #type-selector label {
            font-family: Roboto;
            font-size: 13px;
            font-weight: 300;
        }
    </style>

{% endblock %}
{% block body %}
    {% block header %}
        {{ parent() }}
    {% endblock %}
    <div class="bgcolor3 pt-60 pb-60">
        <div class="container">
            <div class="row">
                <div class="col-sm-4">
                    <div class="iconbox-3">
                        <span class="iconbox-icon">
                           <a href="#gomap"> <i class="fa mdi mdi-pharmacy mdi-36px" onclick="initSearch('pharmacy')"></i></a>
                        </span>
                        <h4 class="heading">Pharmacies</h4>

                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="iconbox-3">
                        <span class="iconbox-icon">
                            <a href="#gomap"> <i class="fa fa-user-md" onclick="initSearch('doctor')"></i></a>
                        </span>
                        <h4 class="heading">Médecins</h4>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="iconbox-3">
                        <span class="iconbox-icon">
                            <a href="#gomap"> <i class="fa fa-hospital-o" onclick="initSearch('hospital')"></i></a>
                        </span>
                        <h4 class="heading">Hôpitals/Cliniques</h4>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="iconbox-3">
                        <span class="iconbox-icon">
                            <a href="#gomap">  <i class="fa mdi mdi-dumbbell mdi-36px" onclick="initSearch('gym')"></i></a>
                        </span>
                        <h4 class="heading">Salles de Sport</h4>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="iconbox-3">
                        <span class="iconbox-icon">
                            <a href="#gomap"> <i class="fa icon-i-physical-therapy" onclick="initSearch('physiotherapist')"></i></a>
                        </span>
                        <h4 class="heading">Physiothérapeutes</h4>
                    </div>
                </div>
                <div class="col-sm-4">
                    <div class="iconbox-3">
                        <span class="iconbox-icon">
                            <a href="#gomap">   <i class="fa mdi mdi-leaf mdi-36px" onclick="initSearch('spa')"></i></a>
                        </span>
                        <h4 class="heading">SPA</h4>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <section id="gomap">
        <input id="pac-input" class="controls" type="text"
               placeholder="Enter a location">
        <div id="type-selector" class="controls">
            <input type="radio" name="type" id="pharmacy" checked="checked">
            <label for="pharmacy">Pharmacie</label>

            <input type="radio" name="type" id="doctor">
            <label for="doctor">Médecin</label>

            <input type="radio" name="type" id="hospital">
            <label for="hospital">Hôpital</label>

            <input type="radio" name="type" id="gym">
            <label for="gym">Salle de Sport</label>

            <input type="radio" name="type" id="physiotherapist">
            <label for="physiotherapist">Physiothérapeute</label>

            <input type="radio" name="type" id="spa">
            <label for="spa">SPA</label>
        </div>
    <div id="map"></div>
    </section>
    <script>

    // Note: This example requires that you consent to location sharing when
    // prompted by your browser. If you see the error "The Geolocation service
    // failed.", it means you probably did not give permission for the browser to
    // locate you.
    var infoWindow;
    var pos;
    var map;
    var markers = [];
    var typesearch='pharmacy';
    function init(){
        console.log(typesearch);
         map = new google.maps.Map(document.getElementById('map'), {
        center: {lat: 36.7948624, lng: 10.0732376},
        zoom: 7
    });
        var input = /** @type {!HTMLInputElement} */(
            document.getElementById('pac-input'));

        var types = document.getElementById('type-selector');
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);
        map.controls[google.maps.ControlPosition.TOP_LEFT].push(types);

        var autocomplete = new google.maps.places.Autocomplete(input);
        autocomplete.bindTo('bounds', map);
        autocomplete.setTypes([]);
        autocomplete.addListener('place_changed', function() {
            var place = autocomplete.getPlace();
            if (!place.geometry) {
                // User entered the name of a Place that was not suggested and
                // pressed the Enter key, or the Place Details request failed.
                window.alert("No details available for input: '" + place.name + "'");
                return;
            }

            // If the place has a geometry, then present it on a map.
            if (place.geometry.viewport) {
                map.fitBounds(place.geometry.viewport);
            } else {
                map.setCenter(place.geometry.location);
                map.setZoom(17);  // Why 17? Because it looks good.
            }
            var posauto = {
                lat: place.geometry.location.lat(),
                lng: place.geometry.location.lng()
            };
            initSearchAutoComplete(typesearch,posauto);
        });

        // Sets a listener on a radio button to change the filter type on Places
        // Autocomplete.
        function setupClickListener(types) {
            var radioButton = document.getElementById(types);
            radioButton.addEventListener('click', function() {
                typesearch=types;
                console.log(typesearch);
            });
        }

        setupClickListener('pharmacy');
        setupClickListener('doctor');
        setupClickListener('hospital');
        setupClickListener('gym');
        setupClickListener('physiotherapist');
        setupClickListener('spa');

    }
    function initSearch(type) {
        setMapOnAll(null);
         infoWindow = new google.maps.InfoWindow({map: map});

        // Try HTML5 geolocation.
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                 pos = {
                    lat: position.coords.latitude,
                    lng: position.coords.longitude
                };
                map.setCenter(pos);
                map.setZoom(15);
                var service = new google.maps.places.PlacesService(map);
                service.nearbySearch({
                    location: pos,
                    radius: 2500,
                    type: [type]
                }, callback);
            }, function() {
                handleLocationError(true, infoWindow, map.getCenter());
            });
        } else {
            // Browser doesn't support Geolocation
            handleLocationError(false, infoWindow, map.getCenter());
        }
        function callback(results, status) {
            if (status === google.maps.places.PlacesServiceStatus.OK) {
                for (var i = 0; i < results.length; i++) {
                    createMarker(results[i]);
                }
            }
        }

        function createMarker(place) {
            var placeLoc = place.geometry.location;
            var marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location
            });
            markers.push(marker);

            google.maps.event.addListener(marker, 'click', function() {
                infoWindow.setContent(place.name);
                infoWindow.open(map, this);
            });
        }
    }
    function initSearchAutoComplete(type,pos) {
        console.log(pos);
        setMapOnAll(null);
        infoWindow = new google.maps.InfoWindow({map: map});

                var service = new google.maps.places.PlacesService(map);
                service.nearbySearch({
                    location: pos,
                    radius: 2500,
                    type: [type]
                }, callback);
        function callback(results, status) {
            if (status === google.maps.places.PlacesServiceStatus.OK) {
                for (var i = 0; i < results.length; i++) {
                    createMarker(results[i]);
                }
            }
        }

        function createMarker(place) {
            var placeLoc = place.geometry.location;
            var marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location
            });
            markers.push(marker);

            google.maps.event.addListener(marker, 'click', function() {
                infoWindow.setContent(place.name);
                infoWindow.open(map, this);
            });
        }
    }


    function setMapOnAll(map) {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(map);
        }
    }
    function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        infoWindow.setPosition(pos);
        infoWindow.setContent(browserHasGeolocation ?
            'Error: The Geolocation service failed.' :
            'Error: Your browser doesn\'t support geolocation.');
    }
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBzh9gH6f1XTNC_fcffsc5unkLxsPlmCpg&libraries=places&callback=init" async defer></script>
{% block footer %}
        {{ parent() }}
{% endblock %}
    {% block script %}
        {{ parent() }}
        {% endblock %}
    <script>
        $(document).ready(function(){
            // Add smooth scrolling to all links
            $("a").on('click', function(event) {

                // Make sure this.hash has a value before overriding default behavior
                if (this.hash !== "") {
                    // Prevent default anchor click behavior
                    event.preventDefault();

                    // Store hash
                    var hash = this.hash;

                    // Using jQuery's animate() method to add smooth page scroll
                    // The optional number (800) specifies the number of milliseconds it takes to scroll to the specified area
                    $('html, body').animate({
                        scrollTop: $(hash).offset().top
                    }, 800, function(){

                        // Add hash (#) to URL when done scrolling (default click behavior)
                        window.location.hash = hash;
                    });
                } // End if
            });
        });
    </script>
{% endblock %}
